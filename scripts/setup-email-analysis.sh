#!/bin/bash

# ü§ñ Script de Configuraci√≥n - Sistema de An√°lisis Autom√°tico de Correos
# Fecha: 16 de Enero 2025
# Descripci√≥n: Configurar automatizaci√≥n para an√°lisis de correos con ChatGPT

echo "ü§ñ Configurando Sistema de An√°lisis Autom√°tico de Correos con ChatGPT"
echo "=================================================================="

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funci√≥n para verificar si un comando existe
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

echo -e "${BLUE}üìã Verificando dependencias...${NC}"

# Verificar cURL
if command_exists curl; then
    echo -e "${GREEN}‚úÖ cURL est√° instalado${NC}"
else
    echo -e "${RED}‚ùå cURL no est√° instalado. Inst√°lalo primero.${NC}"
    exit 1
fi

# Verificar crontab
if command_exists crontab; then
    echo -e "${GREEN}‚úÖ crontab est√° disponible${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è crontab no est√° disponible. Automatizaci√≥n manual requerida.${NC}"
fi

echo ""
echo -e "${BLUE}üîß Configuraci√≥n de Variables de Entorno${NC}"
echo "Verifica que tienes estas variables configuradas en tu .env.local:"
echo ""
echo "# OpenAI (REQUERIDO)"
echo "OPENAI_API_KEY=sk-tu-clave-openai"
echo ""
echo "# Gmail (REQUERIDO para lectura de correos)"
echo "GMAIL_USER=tu-email@gmail.com"
echo "GMAIL_APP_PASSWORD=tu-password-aplicacion"
echo ""
echo "# Token para automatizaci√≥n (OPCIONAL)"
echo "EMAIL_ANALYSIS_TOKEN=tu-token-secreto-para-automatizacion"
echo ""

# Solicitar informaci√≥n al usuario
echo -e "${BLUE}üìù Configuraci√≥n de Automatizaci√≥n${NC}"
read -p "¬øCu√°l es tu dominio (ej: tu-app.vercel.app)? " DOMAIN
read -p "¬øTienes configurado EMAIL_ANALYSIS_TOKEN? (s/n) " HAS_TOKEN

if [[ $HAS_TOKEN == "s" ]] || [[ $HAS_TOKEN == "S" ]]; then
    read -p "¬øCu√°l es tu EMAIL_ANALYSIS_TOKEN? " TOKEN
    URL_WITH_TOKEN="https://${DOMAIN}/api/emails/analyze?token=${TOKEN}"
    URL_WITHOUT_TOKEN="https://${DOMAIN}/api/emails/analyze"
else
    echo -e "${YELLOW}‚ö†Ô∏è Sin token configurado. URLs sin autenticaci√≥n:${NC}"
    URL_WITHOUT_TOKEN="https://${DOMAIN}/api/emails/analyze"
fi

echo ""
echo -e "${BLUE}‚è∞ Configuraci√≥n de Cron Jobs${NC}"
echo "Para ejecutar an√°lisis autom√°tico 4 veces al d√≠a, agrega estas l√≠neas a tu crontab:"
echo ""
echo "# Abrir crontab:"
echo "crontab -e"
echo ""
echo "# Agregar estas l√≠neas (ajusta la zona horaria seg√∫n necesites):"

if [[ $HAS_TOKEN == "s" ]] || [[ $HAS_TOKEN == "S" ]]; then
    echo "0 9 * * *   curl -X GET \"${URL_WITH_TOKEN}\" > /dev/null 2>&1"
    echo "0 13 * * *  curl -X GET \"${URL_WITH_TOKEN}\" > /dev/null 2>&1"
    echo "0 17 * * *  curl -X GET \"${URL_WITH_TOKEN}\" > /dev/null 2>&1"
    echo "0 21 * * *  curl -X GET \"${URL_WITH_TOKEN}\" > /dev/null 2>&1"
else
    echo "0 9 * * *   curl -X GET \"${URL_WITHOUT_TOKEN}\" > /dev/null 2>&1"
    echo "0 13 * * *  curl -X GET \"${URL_WITHOUT_TOKEN}\" > /dev/null 2>&1"
    echo "0 17 * * *  curl -X GET \"${URL_WITHOUT_TOKEN}\" > /dev/null 2>&1"
    echo "0 21 * * *  curl -X GET \"${URL_WITHOUT_TOKEN}\" > /dev/null 2>&1"
fi

echo ""
echo -e "${BLUE}üß™ Testing del Sistema${NC}"
echo "Puedes probar el sistema manualmente con estos comandos:"
echo ""

if [[ $HAS_TOKEN == "s" ]] || [[ $HAS_TOKEN == "S" ]]; then
    echo "# Test con token:"
    echo "curl -X GET \"${URL_WITH_TOKEN}\""
else
    echo "# Test sin token:"
    echo "curl -X GET \"${URL_WITHOUT_TOKEN}\""
fi

echo ""
echo "# Test forzado (sobrescribe an√°lisis existente):"
echo "curl -X POST \"${URL_WITHOUT_TOKEN}\" \\"
echo "  -H \"Content-Type: application/json\" \\"
echo "  -d '{\"force\": true}'"

echo ""
echo -e "${BLUE}üì± Acceso al Dashboard${NC}"
echo "Accede al dashboard de an√°lisis en:"
echo "https://${DOMAIN}/dashboard/emails"

echo ""
echo -e "${BLUE}üìä Servicios de Automatizaci√≥n Externa${NC}"
echo "Tambi√©n puedes usar servicios como:"
echo "‚Ä¢ Zapier: https://zapier.com (crear webhook que llame a tu API)"
echo "‚Ä¢ Make.com: https://make.com (automatizaci√≥n visual)"
echo "‚Ä¢ GitHub Actions: Para proyectos en GitHub"
echo "‚Ä¢ Vercel Cron: Si usas Vercel Pro"

echo ""
echo -e "${BLUE}üîç Monitoreo${NC}"
echo "Para monitorear el sistema:"
echo "1. Revisa logs en tu plataforma de hosting"
echo "2. Verifica an√°lisis en /dashboard/emails"
echo "3. Revisa base de datos EmailAnalysis para logs"

echo ""
echo -e "${GREEN}‚úÖ Configuraci√≥n Completada${NC}"
echo ""
echo -e "${YELLOW}üìù Pr√≥ximos pasos:${NC}"
echo "1. ‚úÖ Configurar variables de entorno"
echo "2. ‚úÖ Aplicar migraci√≥n de base de datos"
echo "3. ‚úÖ Configurar cron jobs (opcional)"
echo "4. ‚úÖ Probar desde /dashboard/emails"
echo "5. ‚úÖ Monitorear funcionamiento"

echo ""
echo -e "${BLUE}üìö Documentaci√≥n Completa:${NC}"
echo "docs/modules/emails/sistema-analisis-automatico-chatgpt.md"

echo ""
echo -e "${GREEN}üéâ ¬°Sistema listo para usar!${NC}" 