// ========================================
// PRUEBA DE IMPORTACI√ìN DE GETSUPABASESERVICECLIENT
// ========================================

console.log('=== PRUEBA DE IMPORTACI√ìN ===');

try {
  // Simular el entorno de Next.js
  process.env.NODE_ENV = 'development';
  
  // Cargar variables de entorno
  require('dotenv').config({ path: '.env.local' });
  
  console.log('‚úÖ Variables de entorno cargadas');
  console.log('NEXT_PUBLIC_SUPABASE_URL:', process.env.NEXT_PUBLIC_SUPABASE_URL ? '‚úÖ Configurada' : '‚ùå No configurada');
  console.log('SUPABASE_SERVICE_ROLE_KEY:', process.env.SUPABASE_SERVICE_ROLE_KEY ? '‚úÖ Configurada' : '‚ùå No configurada');
  
  // Intentar importar la funci√≥n
  console.log('\nüîß Intentando importar getSupabaseServiceClient...');
  
  // Simular la importaci√≥n como lo har√≠a Next.js
  const { getSupabaseServiceClient } = require('../src/lib/supabase-server.js');
  
  console.log('‚úÖ Importaci√≥n exitosa');
  console.log('Tipo de funci√≥n:', typeof getSupabaseServiceClient);
  
  // Probar la funci√≥n
  console.log('\nüîß Probando funci√≥n getSupabaseServiceClient...');
  
  async function testFunction() {
    try {
      const client = await getSupabaseServiceClient();
      console.log('‚úÖ Funci√≥n ejecutada correctamente');
      console.log('Tipo de cliente:', typeof client);
      
      // Probar una operaci√≥n simple
      const { data: roles, error } = await client
        .from('Role')
        .select('*')
        .limit(1);
      
      if (error) {
        console.log('‚ùå Error en operaci√≥n:', error.message);
      } else {
        console.log('‚úÖ Operaci√≥n exitosa');
        console.log('Roles encontrados:', roles?.length || 0);
      }
      
    } catch (error) {
      console.log('‚ùå Error ejecutando funci√≥n:', error.message);
      console.log('Stack:', error.stack);
    }
  }
  
  testFunction();
  
} catch (error) {
  console.log('‚ùå Error en importaci√≥n:', error.message);
  console.log('Stack:', error.stack);
} 