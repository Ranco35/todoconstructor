import { NextRequest, NextResponse } from 'next/server';
export const runtime = 'nodejs';

export async function POST() {
  try {
    console.log('üöÄ API WhatsApp Init: Forzando inicializaci√≥n del bot...');
    
    // Reinicializar el cliente
    const { whatsappManager } = await import('@/lib/whatsapp-client');
    await whatsappManager.initialize();
    
    console.log('‚úÖ Cliente de WhatsApp inicializado exitosamente');
    
    return NextResponse.json({ 
      success: true, 
      message: 'Cliente de WhatsApp inicializado exitosamente' 
    });
  } catch (error) {
    console.error('‚ùå Error inicializando WhatsApp:', error);
    return NextResponse.json({ 
      success: false, 
      error: 'Error inicializando WhatsApp',
      details: error instanceof Error ? error.message : 'Error desconocido'
    }, { status: 500 });
  }
}

// M√©todo GET para obtener informaci√≥n sobre la inicializaci√≥n
export async function GET() {
  try {
    console.log('üîç API WhatsApp Init: Obteniendo informaci√≥n de inicializaci√≥n...');

    // Obtener estado actual
    const { whatsappManager } = await import('@/lib/whatsapp-client');
    const status = whatsappManager.getStatus();

    return NextResponse.json({
      success: true,
      message: 'Informaci√≥n de inicializaci√≥n de WhatsApp Bot',
      data: {
        currentStatus: status,
        initializationInfo: {
          required: !status.isReady,
          steps: [
            'Inicializar cliente de WhatsApp',
            'Configurar autenticaci√≥n local',
            'Generar c√≥digo QR (si es necesario)',
            'Conectar con WhatsApp Web',
            'Registrar handlers de mensajes',
            'Activar respuestas autom√°ticas',
          ],
          notes: [
            'El proceso puede tomar 30-60 segundos',
            'Se generar√° un c√≥digo QR si es la primera vez',
            'Mant√©n el navegador abierto durante la inicializaci√≥n',
            'Una vez conectado, el bot responder√° autom√°ticamente',
          ],
        },
      },
    });

  } catch (error) {
    console.error('‚ùå Error obteniendo info de inicializaci√≥n:', error);
    
    return NextResponse.json({
      success: false,
      error: error instanceof Error ? error.message : 'Error interno del servidor',
    }, { status: 500 });
  }
}

// M√©todo DELETE para detener/reiniciar el bot
export async function DELETE(request: NextRequest) {
  try {
    console.log('üî¥ API WhatsApp Init: Deteniendo bot...');

    // Aqu√≠ podr√≠as agregar l√≥gica para detener el bot si es necesario
    // Por ahora, solo devolvemos informaci√≥n

    return NextResponse.json({
      success: true,
      message: 'Solicitud de detenci√≥n recibida',
      data: {
        action: 'stop_requested',
        note: 'El bot se detendr√° en la pr√≥xima reinicializaci√≥n del servidor',
        timestamp: new Date().toISOString(),
      },
    });

  } catch (error) {
    console.error('‚ùå Error deteniendo bot:', error);
    
    return NextResponse.json({
      success: false,
      error: error instanceof Error ? error.message : 'Error interno del servidor',
    }, { status: 500 });
  }
} 